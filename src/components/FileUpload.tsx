import React, { useCallback, useState } from 'react'
import { useDropzone } from 'react-dropzone'
import { motion } from 'framer-motion'
import { Upload, File, Image, Music, Video, Mic, FileText, Loader } from 'lucide-react'

interface FileUploadProps {
  category: string
  onFileUpload: (file: File, category: string) => void
}

export default function FileUpload({ category, onFileUpload }: FileUploadProps) {
  const [isAnalyzing, setIsAnalyzing] = useState(false)

  const getAcceptedFiles = () => {
    switch (category) {
      case 'image': return { 'image/*': ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp'] }
      case 'audio': return { 'audio/*': ['.mp3', '.wav', '.ogg', '.m4a', '.flac'] }
      case 'video': return { 'video/*': ['.mp4', '.avi', '.mov', '.wmv', '.flv', '.webm'] }
      case 'voice': return { 'audio/*': ['.mp3', '.wav', '.ogg', '.m4a'] }
      case 'text': return { 'text/*': ['.txt', '.doc', '.docx', '.pdf'] }
      default: return {}
    }
  }

  const getIcon = () => {
    switch (category) {
      case 'image': return Image
      case 'audio': return Music
      case 'video': return Video
      case 'voice': return Mic
      case 'text': return FileText
      default: return File
    }
  }

  const onDrop = useCallback((acceptedFiles: File[]) => {
    if (acceptedFiles.length > 0) {
      setIsAnalyzing(true)
      onFileUpload(acceptedFiles[0], category)
    }
  }, [category, onFileUpload])

  const { getRootProps, getInputProps, isDragActive } = useDropzone({
    onDrop,
    accept: getAcceptedFiles(),
    maxFiles: 1,
    disabled: isAnalyzing
  })

  const Icon = getIcon()

  return (
    <div className="max-w-2xl mx-auto">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <div className="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-cyan-500 to-blue-500 rounded-2xl mb-4">
          <Icon className="w-8 h-8 text-white" />
        </div>
        <h2 className="text-2xl font-bold text-white mb-2">
          Upload {category.charAt(0).toUpperCase() + category.slice(1)} File
        </h2>
        <p className="text-gray-400">
          Our AI will analyze your file and detect if it was generated by artificial intelligence
        </p>
      </motion.div>

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.2 }}
        {...getRootProps()}
        className={`border-2 border-dashed rounded-2xl p-12 text-center cursor-pointer transition-all ${
          isDragActive 
            ? 'border-cyan-500 bg-cyan-500/10' 
            : 'border-white/20 hover:border-cyan-500/50 hover:bg-white/5'
        } ${isAnalyzing ? 'pointer-events-none opacity-50' : ''}`}
      >
        <input {...getInputProps()} />
        
        {isAnalyzing ? (
          <div className="flex flex-col items-center">
            <Loader className="w-12 h-12 text-cyan-400 animate-spin mb-4" />
            <h3 className="text-xl font-semibold text-white mb-2">Analyzing File...</h3>
            <p className="text-gray-400">Please wait while we process your file</p>
          </div>
        ) : (
          <div className="flex flex-col items-center">
            <Upload className="w-12 h-12 text-gray-400 mb-4" />
            <h3 className="text-xl font-semibold text-white mb-2">
              {isDragActive ? 'Drop your file here' : 'Drag & drop your file here'}
            </h3>
            <p className="text-gray-400 mb-4">or click to browse files</p>
            <div className="flex flex-wrap justify-center gap-2 text-sm text-gray-500">
              {Object.values(getAcceptedFiles())[0]?.map((ext: string) => (
                <span key={ext} className="bg-white/5 px-2 py-1 rounded">
                  {ext}
                </span>
              ))}
            </div>
          </div>
        )}
      </motion.div>

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.4 }}
        className="mt-8 grid grid-cols-1 md:grid-cols-3 gap-4"
      >
        <div className="bg-white/5 border border-white/10 rounded-lg p-4 text-center">
          <div className="w-8 h-8 bg-green-500/20 rounded-lg flex items-center justify-center mx-auto mb-2">
            <span className="text-green-400 font-bold">1</span>
          </div>
          <h4 className="text-white font-medium mb-1">Upload</h4>
          <p className="text-gray-400 text-sm">Select your file</p>
        </div>
        
        <div className="bg-white/5 border border-white/10 rounded-lg p-4 text-center">
          <div className="w-8 h-8 bg-blue-500/20 rounded-lg flex items-center justify-center mx-auto mb-2">
            <span className="text-blue-400 font-bold">2</span>
          </div>
          <h4 className="text-white font-medium mb-1">Analyze</h4>
          <p className="text-gray-400 text-sm">AI processes content</p>
        </div>
        
        <div className="bg-white/5 border border-white/10 rounded-lg p-4 text-center">
          <div className="w-8 h-8 bg-purple-500/20 rounded-lg flex items-center justify-center mx-auto mb-2">
            <span className="text-purple-400 font-bold">3</span>
          </div>
          <h4 className="text-white font-medium mb-1">Results</h4>
          <p className="text-gray-400 text-sm">Get detailed report</p>
        </div>
      </motion.div>
    </div>
  )
}
